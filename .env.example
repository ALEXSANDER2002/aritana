# ARITANA - Sistema de Identificação e Monitoramento de Embarcações
# Exemplo de arquivo de configuração de ambiente

# Django Settings
SECRET_KEY=django-insecure-change-this-in-production
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,aritana.onrender.com

# Database (SQLite é padrão para desenvolvimento)
# Para PostgreSQL em produção:
DATABASE_URL=

# File Storage
# Para desenvolvimento local não é necessário configurar
# Para produção com AWS S3:
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_STORAGE_BUCKET_NAME=aritana-bucket
# AWS_S3_REGION_NAME=us-east-1

# IA/ML Configuration
# Modelo de IA para detecção de embarcações
AI_MODEL_PATH=models/yolov8_embarcacoes.pt
AI_MODEL_CONFIDENCE_THRESHOLD=0.8
AI_MODEL_MAX_DETECTIONS=10

# API Configuration
API_RATE_LIMIT=100/hour
API_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Email Configuration (para notificações)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# Para produção:
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password

# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/aritana.log

# Monitoring
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Cache (Redis para produção)
# CACHE_URL=redis://localhost:6379/1

# Sistema de Backup
BACKUP_ENABLED=True
BACKUP_STORAGE_PATH=backups/
BACKUP_RETENTION_DAYS=30

# Configurações específicas do ARITANA
ARITANA_VERSION=1.0.0
ARITANA_MAP_DEFAULT_CENTER_LAT=-1.4558
ARITANA_MAP_DEFAULT_CENTER_LON=-48.5034
ARITANA_MAP_DEFAULT_ZOOM=11
ARITANA_UPLOAD_MAX_SIZE=10485760  # 10MB
ARITANA_SUPPORTED_FORMATS=image/jpeg,image/jpg,image/png
ARITANA_ANALYSIS_TIMEOUT=30  # segundos 

# Hostname externo do Render (fornecido automaticamente)
RENDER_EXTERNAL_HOSTNAME= 